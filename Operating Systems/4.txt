	import java.io.*;
import java.util.*;
class Process
{
	int number;
	int arrival;
	int burst;
	int burst2;
	int waiting;
	int turnaround;
	int start;
	int end;
}
class SJF
{
	public static void main(String args[])throws IOException
	{
		Schedule s=new Schedule();
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		System.out.print("No of Processes:");
		int n=Integer.parseInt(br.readLine());
		Process p[]=new Process[n];							// Array of Objects
		for(int i=0; i<n; i++)
		{
			p[i]=new Process();
			p[i].number=(i+1);			
			System.out.println("Burst Time of Process "+p[i].number);
			p[i].burst=Integer.parseInt(br.readLine());
			p[i].burst2=p[i].burst;
			System.out.println("Arrival Time of Process "+p[i].number);
			p[i].arrival=Integer.parseInt(br.readLine());
		}
		
		s.SJFNon(p,n);
	}
}

class Schedule
{
 	void SJFNon(Process p[], int n)
	{
		Process temp;
		int ctime=0;								// ctime is for the current time

		for(int j=0; j<n-1; j++)						// Bubble sort the processes as per burst time
		for(int i=0; i<n-1; i++)
		{
			if(p[i].burst>p[i+1].burst)
			{
				temp=p[i];
				p[i]=p[i+1];
				p[i+1]=temp;
			}
		}

		int a,b;
		System.out.println("Gantt Chart:");	
		for(int i=0; i<n; i++)
		{
			b=0;
			int j=i+1;
			if(ctime<p[i].arrival)
			{ 
				while(b==0&&j<n)
				{
					if(p[j].arrival<=ctime)
					{					
						temp=p[j];
						for(int k=j; k>i; k--)				
						p[k]=p[k-1];
						p[i]=temp;
						b=1;
					}
					j++;
				}
				if(b==0)
				{
					System.out.print("|"+ctime+"| -- ");
					ctime=p[i].arrival;
				}
			}
			System.out.print("|"+ctime+"| "+"Process "+p[i].number+" ");
			p[i].waiting=ctime-p[i].arrival;
			ctime=ctime+p[i].burst;
			p[i].turnaround=p[i].waiting+p[i].burst;
		}
	
		System.out.println("|"+ctime+"|");
		System.out.println();

		average(p,n);	
	}

	void average(Process p[], int n)
	{
		
		float avgwait=0, avgturn=0;
		System.out.println("Process    Wait Time    Turnaround Time");	
		for(int i=0; i<n; i++)
		{
			System.out.println(p[i].number+"\t\t"+p[i].waiting+"\t\t"+p[i].turnaround);
		}

		for(int i=0; i<n; i++)				
		{
			avgwait=avgwait+p[i].waiting;
			avgturn=avgturn+p[i].turnaround;
		}
	
		System.out.println("Avg Wait Time: "+(avgwait/n));	
		System.out.println("Avg Turn Around Time: "+(avgturn/n)); 
	}
}

/* Output:

C:\Roshan\Java\OS>java SJF

No of Processes:5
Burst Time of Process 1
3
Arrival Time of Process 1
0
Burst Time of Process 2
6
Arrival Time of Process 2
2
Burst Time of Process 3
4
Arrival Time of Process 3
4
Burst Time of Process 4
5
Arrival Time of Process 4
6
Burst Time of Process 5
2
Arrival Time of Process 5
8

Gantt Chart:

|0| Process 1 |3| Process 2 |9| Process 5 |11| Process 3 |15| Process 4 |20|

Process    Wait Time    Turnaround Time
1               0               3
2               1               7
5               1               3
3               7               11
4               9               14

Avg Wait Time: 3.6
Avg Turn Around Time: 7.6


/*